// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  name             String
  email            String             @unique
  password         String
  user_otp         Int?
  account_verified Boolean?           @default(false)
  passwordResetOtp Int?
  profile          String?
  createdAt        DateTime           @default(now())
  updateAt         DateTime           @updatedAt
  Post             Post[]
  Comments         Comments[]
  SocialMediaLinks SocialMediaLinks[]
}

// Social Media Schema

model SocialMediaLinks {
  id       Int    @id @default(autoincrement())
  platform String
  url      String
  user_id  Int
  user     User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, platform])
}

// In Post we need check that by which user the post is created

model Post {
  id           Int        @id @default(autoincrement())
  user_id      Int
  user         User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  title        String
  content      String
  postImage    String?
  commentCount Int        @default(0)
  createdAt    DateTime   @default(now())
  Comments     Comments[]
}

// In Comment we need to check the to which post the comment is done and by which user

model Comments {
  id        Int      @id @default(autoincrement())
  post_id   Int
  post      Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  comment   String
  createdAt DateTime @default(now())
}
